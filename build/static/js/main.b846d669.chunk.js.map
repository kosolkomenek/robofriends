{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","className","alt","src","id","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCQCQ,EAbF,SAACC,GAAW,IAChBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACd,OACC,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAK,SAASC,IAAG,+BAA0BL,EAAMM,GAAhC,cACtB,gCACC,6BAAKL,IACL,4BAAIC,WCcOK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpB,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACC,cAAC,EAAD,CAECL,GAAIE,EAAOG,GAAGL,GACdL,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGL,UCINM,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKX,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAArE,SACEtB,EAAMuB,YCuCKC,G,wDArCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAb1C,EAAKC,MAAM,CACVtB,OAAQ,GACRK,YAAY,IAJD,E,gEAQO,IAAD,OAClBkB,MAAM,8CACJtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAAEnB,OAAS0B,S,+BAOhC,IAAD,EACuBC,KAAKL,MAA5BtB,EADA,EACAA,OAAQK,EADR,EACQA,YACVuB,EAAiB5B,EAAO6B,QAAO,SAAAC,GACpC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS3B,EAAY0B,kBAEtD,OAAQ/B,EAAOiC,OAGd,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcqB,KAAKV,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ4B,SANrB,6C,GAzBgBM,cCClBC,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.b846d669.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = (props) => {\n\tconst { name, email} = props\n\treturn (\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt ='robots' src={`https://robohash.org/${props.id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({ robots }) => {\n\t\nreturn (\n\t<div>\n\t\t{\n\t\t \trobots.map((user, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={robots[i].id}\n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t  \t\t);\n\t\t\t\t})\n \t  \t\t}\n \t</div>\n  );\n}\n\nexport default Cardlist;\t","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '5px solid black', height:'800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll","import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots: [],\n\t\t\tsearchfield:''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=>  response.json())\n\t\t\t.then(users => this.setState({ robots : users}));\n\t}\n\n\tonSearchChange = (event) =>{\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\treturn !robots.length ?\n\t\t<h1>Loading</h1> :\n\t\t(\t\t\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1' >RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<Cardlist robots={filteredRobots} />\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t)\t\n\t};\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n\t<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}